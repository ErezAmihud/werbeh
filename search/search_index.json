{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"werbeh \u00b6 This is a program to reverse the direction of right to left languages. Meaning instead of writing \u05e9\u05dc\u05d5\u05dd we would write \u05dd\u05d5\u05dc\u05e9 as we would do with english (the characters will be automatically formated to the left) , and the letters will be inverted. Desclaimer \u00b6 This project does not work and will not work. I used the idea to learn about text parsing and read some c/c++ sources (which is always nice). Reason for creating the repo \u00b6 After all this is not gonna work, but I want to: - Preserve my research for myself and my future possible usage - Help curious mind like me to have the exact reasoning - I created the docs anyway so why not? Reading list: initial research Operating system reasearch React Os Sources break point unicode library The docs are generated using publish-mkdocs","title":"werbeh"},{"location":"#werbeh","text":"This is a program to reverse the direction of right to left languages. Meaning instead of writing \u05e9\u05dc\u05d5\u05dd we would write \u05dd\u05d5\u05dc\u05e9 as we would do with english (the characters will be automatically formated to the left) , and the letters will be inverted.","title":"werbeh"},{"location":"#desclaimer","text":"This project does not work and will not work. I used the idea to learn about text parsing and read some c/c++ sources (which is always nice).","title":"Desclaimer"},{"location":"#reason-for-creating-the-repo","text":"After all this is not gonna work, but I want to: - Preserve my research for myself and my future possible usage - Help curious mind like me to have the exact reasoning - I created the docs anyway so why not? Reading list: initial research Operating system reasearch React Os Sources break point unicode library The docs are generated using publish-mkdocs","title":"Reason for creating the repo"},{"location":"Operating%20system%20reasearch/","text":"Winapi and react os research \u00b6 The next suspect is the oprating os itself. Note that the more likely suspect is the text processing part of the application (unicode library), but then I would have proven it and ended the research early, meaning less fun for me. Windows locale \u00b6 Windows locale is the way windows stores in what region your windows computer operates, what the calander you are using, the time format you are using (or the one you set for yourself), timezone and everything else. My spider sense and my hope drove me to look into it and I found a few interesting things - LOCALE_IREADINGLAYOUT - set_layout_oriantation - that does not help, but is kinda nice The LOCALE_IREADINGLAYOUT property is a string resource attached to a specific language (later in react os it will be explained better) in a compiled exe/dll that is meant (the best way to explain it is reading the react os source). So I tried to find it online, and found nothing beside the windows documentation. I noticed that the windows documentation stated that the functionality of translating a program/dll to different languages has moved to [[mui]] files, and indeed my windows 10 programs had mui files as resources. After realising I can't use my computer to get or change this string without changing the mui file data. To avoid interacting with multiple parsing issues and changing things in a compiled dll, I resorted to use react os , which I can look at the source code that I want, yay.","title":"Winapi and react os research"},{"location":"Operating%20system%20reasearch/#winapi-and-react-os-research","text":"The next suspect is the oprating os itself. Note that the more likely suspect is the text processing part of the application (unicode library), but then I would have proven it and ended the research early, meaning less fun for me.","title":"Winapi and react os research"},{"location":"Operating%20system%20reasearch/#windows-locale","text":"Windows locale is the way windows stores in what region your windows computer operates, what the calander you are using, the time format you are using (or the one you set for yourself), timezone and everything else. My spider sense and my hope drove me to look into it and I found a few interesting things - LOCALE_IREADINGLAYOUT - set_layout_oriantation - that does not help, but is kinda nice The LOCALE_IREADINGLAYOUT property is a string resource attached to a specific language (later in react os it will be explained better) in a compiled exe/dll that is meant (the best way to explain it is reading the react os source). So I tried to find it online, and found nothing beside the windows documentation. I noticed that the windows documentation stated that the functionality of translating a program/dll to different languages has moved to [[mui]] files, and indeed my windows 10 programs had mui files as resources. After realising I can't use my computer to get or change this string without changing the mui file data. To avoid interacting with multiple parsing issues and changing things in a compiled dll, I resorted to use react os , which I can look at the source code that I want, yay.","title":"Windows locale"},{"location":"break%20point/","text":"It was not the application itself, and I did not have a good lead on the operating system, so I went back to unicode. Unicode have a spacial character that forces the text to be ltr or rtl. It is not helpful for the project but it is the setting point for the next part.","title":"Break point"},{"location":"initial%20research/","text":"Black Box Research \u00b6 At first I wanted to understand where the reversing is implemented, is it from the text processing application, the windows operating system or the app creator itself. Message box \u00b6 I started with a simple message box to print I started creating a basic message box with a message, and trying to print english and hebrew letters. As we expected, when giving the characters in english they were printed as left to right, and hebrew from right to left. eg. when writing the english word {'h', 'e', 'l', 'l', 'o'} we would use {'\u05dd', '\u05d5', ,\u05dc', '\u05e9'} array. Meaning there is nothing in the application itself (or data) to point to the fact that the text is reversed. So we cross it from the list of suspects - [x] The application - [ ] The windows operating system - [ ] Text processing application","title":"Initial research"},{"location":"initial%20research/#black-box-research","text":"At first I wanted to understand where the reversing is implemented, is it from the text processing application, the windows operating system or the app creator itself.","title":"Black Box Research"},{"location":"initial%20research/#message-box","text":"I started with a simple message box to print I started creating a basic message box with a message, and trying to print english and hebrew letters. As we expected, when giving the characters in english they were printed as left to right, and hebrew from right to left. eg. when writing the english word {'h', 'e', 'l', 'l', 'o'} we would use {'\u05dd', '\u05d5', ,\u05dc', '\u05e9'} array. Meaning there is nothing in the application itself (or data) to point to the fact that the text is reversed. So we cross it from the list of suspects - [x] The application - [ ] The windows operating system - [ ] Text processing application","title":"Message box"},{"location":"react%20os/","text":"React os \u00b6 React os is an open source operating system that is built on top of the windows architecture and official api/docs. The system contains an oprational system and source codes for multiple parts that act like the windows os. The project is a little bit behind the actuall windows distrubution (it is more like windows xp/7 than windows 10), which is actually a bonus for some parts of this research. React os sources \u00b6 To change the LOCALE_IREADINGLAYOUT I opened the sources of react os and changed this file and compiled the system. It did not change the direction of the text, but it was fun compiling it :)","title":"React os"},{"location":"react%20os/#react-os","text":"React os is an open source operating system that is built on top of the windows architecture and official api/docs. The system contains an oprational system and source codes for multiple parts that act like the windows os. The project is a little bit behind the actuall windows distrubution (it is more like windows xp/7 than windows 10), which is actually a bonus for some parts of this research.","title":"React os"},{"location":"react%20os/#react-os-sources","text":"To change the LOCALE_IREADINGLAYOUT I opened the sources of react os and changed this file and compiled the system. It did not change the direction of the text, but it was fun compiling it :)","title":"React os sources"},{"location":"resource/","text":"Resources \u00b6 A resource is something (string, bytes, etc) that is stored in a dll/exe file and can be accessed and parsed by anyone to give extra details about the file. For example, icons are saved as resource in the file.","title":"Resource"},{"location":"resource/#resources","text":"A resource is something (string, bytes, etc) that is stored in a dll/exe file and can be accessed and parsed by anyone to give extra details about the file. For example, icons are saved as resource in the file.","title":"Resources"},{"location":"set_layout_oriantation/","text":"I can't recall the exact name sadly, but this function just switched the side of the toolbar (the clock under the screen moves to the left instead of the right, and everything else is inverted) It only affects the layout of the system, like when changing the primary language of the system from english to hebrew and the opposite, but in a function.","title":"Set layout oriantation"},{"location":"unicode%20library/","text":"After all that (and the fact that this research started to get old) I went to read to sources of a library that does text processing and displaying it. Long story short, this library imported a library that had a list of unicode characters that should be inverted (rtl), and a reference to the unicode bidi specification . I finally found it! I can go to rest now.","title":"Unicode library"}]}